@model Assignment2.Models.StoreInventory


@{
    ViewData["Title"] = "New item request";
}
<h4>StoreInventory - @Html.Raw(ViewBag.myData)</h4>
<hr />
<div class="row">
<div class="info">
           <h2> Details </h2>
                <br/>  <br/> 
       <div class="col-md-12">
          <div class="col-md-6">@Html.DisplayNameFor(model => model.ProductID) : @Html.DisplayFor(model => model.Product.ProductID)  </div>
          <div class="col-md-6">@Html.DisplayNameFor(model => model.Product.Name) :  @Html.DisplayFor(model => model.Product.Name)</div>
      </div>

             <br/>  <br/> 
          <form asp-action="NewRequest">
       
             <div asp-validation-summary="ModelOnly" class="text-danger"></div>
             <input type="hidden" asp-for="StoreID" />
             <input type="hidden" asp-for="Product.ProductID" />
             <div class="form-group">
                <label asp-for="StockLevel" class="control-label"></label>
                <input asp-for="StockLevel" class="form-control" />
                <span asp-validation-for="StockLevel" class="text-danger"></span>
             </div>
             <div class="form-group">
                <input class="saveButton" type="submit" value="Save" class="btn btn-default" />
                <a class="backButton" asp-action="NewInventory">Back </a>
             </div>
          </form>
    
</div>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

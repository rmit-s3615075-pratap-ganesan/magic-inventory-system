@model StoreInventory

@{
    ViewData["Title"] = "Buy";

}

<center> <h2>Buy</h2></center>
<hr/>
<div class="row">
<div class="info">
 <dl class="dl-horizontal">
      <dt>
            Product Name
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Product.Name)
        </dd>
        <dt>
            Store Name
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Store.Name)
        </dd>
        <dt>
           Total Availabile
        </dt>
        <dd>
            @Html.DisplayFor(model => model.StockLevel)
        </dd>
         <dt>
           Price
        </dt>
        <dd>
           $@Html.DisplayFor(model => model.Product.Price)
        </dd>
    </dl>
 

        <form asp-action="Buy">
          <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ProductID"/>
            <input type="hidden" asp-for="Product.Name"/>
            <input type="hidden" asp-for="StoreID"/>
            <input type="hidden" asp-for="Store.Name"/>
            <input type="hidden" asp-for="Product.Price"/>
           
            <div class="form-group">
                <b>Quantity</b>
                <input asp-for="StockLevel" name="StockLevel" id="data" class="form-control"/>
                <span asp-validation-for="StockLevel" class="text-danger" ></span>
            </div>
           
            <div class="form-group">
                <input type="submit" value="Buy" class="saveButton" />
                 <a class="backButton" asp-action="Index">Back </a>
            </div>
        </form>

    </div>
</div>

<div>

</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
   
}
